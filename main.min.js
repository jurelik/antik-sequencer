const AudioContext=window.AudioContext||window.webkitAudioContext,context=new AudioContext;let trackArray=[];const mainContainer=document.getElementById('container'),trackDiv=document.getElementById('track-div'),addTrack=document.getElementById('add-track'),playBtn=document.getElementById('play'),stopBtn=document.getElementById('stop'),bpm=document.getElementById('bpm'),warningArea=document.getElementById('warning-area');window.addEventListener('dragover',a=>{a.stopPropagation(),a.preventDefault(),a.dataTransfer.dropEffect='none'});class Track{constructor(){this.rhythmArray=[],this.gain=context.createGain(),this.filter=context.createBiquadFilter(),this.trackContainer=document.createElement('div'),this.trackContainer.className='track-container',trackDiv.appendChild(this.trackContainer),this.toggle={htmlElement:document.createElement('button'),state:!0},this.toggle.htmlElement.className='toggle',this.trackContainer.appendChild(this.toggle.htmlElement),this.toggle.htmlElement.addEventListener('click',a=>{a.stopPropagation(),a.preventDefault(),!0===this.toggle.state?(this.toggle.state=!1,this.toggle.htmlElement.className='toggle-off'):(this.toggle.state=!0,this.toggle.htmlElement.className='toggle'),this.toggle.htmlElement.blur()}),this.sequencerBtns=[];for(let a=0;16>a;a++)this.sequencerBtns=this.sequencerBtns.concat({htmlElement:document.createElement('button'),state:!1}),this.rhythmArray=this.rhythmArray.concat(this.sequencerBtns[a].state),this.sequencerBtns[a].htmlElement.className='sequencer-btn',this.trackContainer.appendChild(this.sequencerBtns[a].htmlElement),this.sequencerBtns[a].htmlElement.addEventListener('click',b=>{b.stopPropagation(),b.preventDefault(),!1===this.sequencerBtns[a].state?(this.sequencerBtns[a].state=!0,this.sequencerBtns[a].htmlElement.className='sequencer-btn-pressed'):(this.sequencerBtns[a].state=!1,this.sequencerBtns[a].htmlElement.className='sequencer-btn'),this.rhythmArray[a]=this.sequencerBtns[a].state,this.sequencerBtns[a].htmlElement.blur()});this.filter.connect(this.gain),this.filter.type='lowpass',this.filter.frequency.setValueAtTime(22000,context.currentTime),this.filterSlider=document.createElement('input'),this.filterSlider.setAttribute('type','range'),this.filterSlider.setAttribute('min','0'),this.filterSlider.setAttribute('max','11000'),this.filterSlider.setAttribute('step','1'),this.filterSlider.setAttribute('value','11000'),this.filterSlider.setAttribute('orient','vertical'),this.filterSlider.className='filter-slider',this.trackContainer.appendChild(this.filterSlider),this.filterSlider.addEventListener('input',a=>{a.stopPropagation(),a.preventDefault(),this.filter.frequency.setValueAtTime(this.logSliderFilter(this.filterSlider.value),context.currentTime)}),this.filterSlider.addEventListener('mouseup',()=>{this.filterSlider.blur()}),this.gain.connect(context.destination),this.gain.gain.setValueAtTime(1,context.currentTime),this.gainSlider=document.createElement('input'),this.gainSlider.setAttribute('type','range'),this.gainSlider.setAttribute('type','range'),this.gainSlider.setAttribute('min','0.001'),this.gainSlider.setAttribute('max','1'),this.gainSlider.setAttribute('step','0.001'),this.gainSlider.setAttribute('value','1'),this.gainSlider.setAttribute('orient','vertical'),this.gainSlider.className='gain-slider',this.trackContainer.appendChild(this.gainSlider),this.gainSlider.addEventListener('input',a=>{a.stopPropagation(),a.preventDefault(),this.gain.gain.exponentialRampToValueAtTime(this.logSliderGain(this.gainSlider.value),context.currentTime+0.1)}),this.gainSlider.addEventListener('mouseup',()=>{this.gainSlider.blur()}),this.dropZone=document.createElement('div'),this.dropZone.className='drop-zone',this.trackContainer.appendChild(this.dropZone),this.dropZone.innerHTML='<p>Load File</p>',this.hiddenInput=document.createElement('input'),this.hiddenInput.setAttribute('type','file'),this.hiddenInput.className='hidden-input',this.trackContainer.appendChild(this.hiddenInput),this.dropZone.addEventListener('drop',this.dropHandler.bind(this)),this.dropZone.addEventListener('dragover',this.dragHandler.bind(this)),this.dropZone.addEventListener('click',a=>{a.stopPropagation(),a.preventDefault(),this.hiddenInput.click()}),this.hiddenInput.addEventListener('change',a=>{a.stopPropagation(),a.preventDefault();const b=new FileReader;let c=this.hiddenInput.files[0],d=this;b.onloadstart=()=>{this.dropZone.innerHTML='<p>Loading..</p>'},b.onload=()=>{'audio/wav'===c.type||'audio/x-wav'===c.type||'audio/mp3'===c.type||'audio/mpeg'===c.type||'audio/ogg'===c.type?context.decodeAudioData(b.result,f=>{5>f.duration?(d.buffer=f,this.dropZone.innerHTML='<p>Sound Loaded</p>',warningArea.innerHTML=''):(this.dropZone.innerHTML='<p>Load File</p>',warningArea.innerHTML='Sound file needs to be under 5s long.',this.warningAnimation())}):(this.dropZone.innerHTML='<p>Load File</p>',warningArea.innerHTML='We currently support wav, mp3 and ogg formats.',this.warningAnimation())},b.readAsArrayBuffer(c)}),this.deleteBtn=document.createElement('button'),this.deleteBtn.className='delete-btn',this.deleteBtn.innerHTML='\u2716',this.trackContainer.appendChild(this.deleteBtn),this.deleteBtn.addEventListener('click',a=>{a.stopPropagation(),a.preventDefault(),trackArray.splice(trackArray.indexOf(this),1),trackDiv.removeChild(this.trackContainer),warningArea.innerHTML=''})}play(a){if(this.buffer){const b=context.createBufferSource();b.connect(this.filter),b.buffer=this.buffer,b.start(a)}else console.log('sound not loaded')}dropHandler(a){a.stopPropagation(),a.preventDefault();let b=a.dataTransfer.files[0],c=this;const d=new FileReader;d.onloadstart=()=>{this.dropZone.innerHTML='<p>Loading..</p>'},d.onload=()=>{'audio/wav'===b.type||'audio/x-wav'===b.type||'audio/mp3'===b.type||'audio/mpeg'===b.type||'audio/ogg'===b.type?context.decodeAudioData(d.result,f=>{5>f.duration?(c.buffer=f,this.dropZone.innerHTML='<p>Sound Loaded</p>',warningArea.innerHTML=''):(this.dropZone.innerHTML='<p>Load File</p>',warningArea.innerHTML='Sound file needs to be under 5s long.',this.warningAnimation())}):(this.dropZone.innerHTML='<p>Load File</p>',warningArea.innerHTML='We currently support wav, mp3 and ogg formats.',this.warningAnimation())},d.readAsArrayBuffer(b)}dragHandler(a){a.stopPropagation(),a.preventDefault(),a.dataTransfer.dropEffect='copy'}logSliderFilter(a){var b=0,d=Math.log(30),f=Math.log(22000),h=Math.exp(d+(f-d)/(11000-b)*(a-b));return h}logSliderGain(a){var b=1e-3,d=Math.log(1e-3),f=Math.log(1),h=Math.exp(d+(f-d)/(1-b)*(a-b));return h}warningAnimation(){warningArea.classList.add('warning-area-animation'),this.hiddenInput.value=null,setTimeout(()=>{warningArea.innerHTML='',warningArea.classList.remove('warning-area-animation')},3e3)}}const drumSequencer={currNote:0,lookahead:25,nextNoteTime:0,playing:!1,scheduleAheadTime:0.1,tempo:120,createTrack(){trackArray=trackArray.concat(new Track)},playRhythm(){0<trackArray.length&&!1===this.playing?(this.nextNoteTime=context.currentTime+5e-3,this.playing=!0,playBtn.className='play-active',stopBtn.className='stop-inactive',this.scheduler()):!0===this.playing?console.log('Already playing'):console.log('No tracks created')},stopRhythm(){!0===this.playing&&(clearTimeout(this.timer),this.playing=!1,playBtn.className='play-inactive',stopBtn.className='stop-active')},scheduler(){if(0<trackArray.length&&!1===document.hidden){for(;this.nextNoteTime<context.currentTime+this.scheduleAheadTime;){for(let a=0;a<trackArray.length;a++)trackArray[a].rhythmArray[this.currNote]&&!0===trackArray[a].toggle.state&&(trackArray[a].play(this.nextNoteTime),console.log(this.currNote));this.nextNote()}this.timer=setTimeout(this.scheduler.bind(this),this.lookahead)}else clearTimeout(this.timer),this.playing=!1,playBtn.className='play-inactive',this.currNote=0},nextNote(){this.secondsPerBeat=60/this.tempo/4,this.nextNoteTime+=this.secondsPerBeat,this.currNote++,16===this.currNote&&(this.currNote=0)}};addTrack.addEventListener('click',()=>{drumSequencer.createTrack(),addTrack.blur()}),playBtn.addEventListener('click',()=>{drumSequencer.playRhythm(),playBtn.blur()}),stopBtn.addEventListener('click',()=>{drumSequencer.stopRhythm(),drumSequencer.currNote=0,stopBtn.blur()}),bpm.addEventListener('change',()=>{drumSequencer.tempo=bpm.value,console.log(bpm.value),bpm.blur()}),window.addEventListener('keypress',a=>{' '===a.key&&!1===drumSequencer.playing?drumSequencer.playRhythm():' '===a.key&&!0===drumSequencer.playing&&(drumSequencer.stopRhythm(),drumSequencer.currNote=0)});